### Starting build.
# Target: test.ml.depends, tags: { package(ANSITerminal), package(oUnit), debug, extension:ml, file:test.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package ANSITerminal -modules test.ml > test.ml.depends # cached
# Target: command.mli.depends, tags: { package(ANSITerminal), package(oUnit), debug, extension:mli, file:command.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package ANSITerminal -modules command.mli > command.mli.depends # cached
# Target: game.mli.depends, tags: { package(ANSITerminal), package(oUnit), debug, extension:mli, file:game.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package ANSITerminal -modules game.mli > game.mli.depends # cached
# Target: game.cmi, tags: { package(ANSITerminal), package(oUnit), byte, compile, debug, extension:mli, file:game.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package oUnit -package ANSITerminal -o game.cmi game.mli
# Target: state.mli.depends, tags: { package(ANSITerminal), package(oUnit), debug, extension:mli, file:state.mli, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package ANSITerminal -modules state.mli > state.mli.depends # cached
# Target: command.cmi, tags: { package(ANSITerminal), package(oUnit), byte, compile, debug, extension:mli, file:command.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package oUnit -package ANSITerminal -o command.cmi command.mli
# Target: state.cmi, tags: { package(ANSITerminal), package(oUnit), byte, compile, debug, extension:mli, file:state.mli, interf, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package oUnit -package ANSITerminal -o state.cmi state.mli
# Target: test.cmo, tags: { package(ANSITerminal), package(oUnit), byte, compile, debug, extension:cmo, extension:ml, file:test.cmo, file:test.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package oUnit -package ANSITerminal -o test.cmo test.ml # cached
# Target: command.ml.depends, tags: { package(ANSITerminal), package(oUnit), debug, extension:ml, file:command.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package ANSITerminal -modules command.ml > command.ml.depends # cached
# Target: game.ml.depends, tags: { package(ANSITerminal), package(oUnit), debug, extension:ml, file:game.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package ANSITerminal -modules game.ml > game.ml.depends # cached
# Target: state.ml.depends, tags: { package(ANSITerminal), package(oUnit), debug, extension:ml, file:state.ml, ocaml, ocamldep, quiet, traverse }
ocamlfind ocamldep -package oUnit -package ANSITerminal -modules state.ml > state.ml.depends # cached
# Target: command.cmo, tags: { package(ANSITerminal), package(oUnit), byte, compile, debug, extension:cmo, extension:ml, file:command.cmo, file:command.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package oUnit -package ANSITerminal -o command.cmo command.ml
# Target: game.cmo, tags: { package(ANSITerminal), package(oUnit), byte, compile, debug, extension:cmo, extension:ml, file:game.cmo, file:game.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package oUnit -package ANSITerminal -o game.cmo game.ml
# Target: state.cmo, tags: { package(ANSITerminal), package(oUnit), byte, compile, debug, extension:cmo, extension:ml, file:state.cmo, file:state.ml, implem, ocaml, quiet, traverse }
ocamlfind ocamlc -c -g -package oUnit -package ANSITerminal -o state.cmo state.ml
# Target: test.byte, tags: { package(ANSITerminal), package(oUnit), byte, debug, dont_link_with, extension:byte, file:test.byte, link, ocaml, program, quiet, traverse }
ocamlfind ocamlc -linkpkg -g -package oUnit -package ANSITerminal game.cmo command.cmo state.cmo test.cmo -o test.byte
# Compilation successful.
